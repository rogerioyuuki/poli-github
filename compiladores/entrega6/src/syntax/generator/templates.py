
BASE = """
#include "ape.h"
#include "../main.h"
#include "../lib/utarray.h"
#include "../lib/uthash.h"
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

/******************************/
/*          WARNING           */
/* This file is autogenerated */
/*                            */
/******************************/

void Automato_copy(void *_dst, const void *_src) {{
  Automato *dst = (Automato*)_dst, *src = (Automato*)_src;
  dst->title = src->title;
  dst->estado = src->estado;

  dst->estadosTransicoes = src->estadosTransicoes;
  dst->estadosFinais = src->estadosFinais;
}}

UT_icd Automato_icd = {{sizeof(Automato), NULL, Automato_copy, NULL}};

APE *create_ape() {{
    int push_tmp;

    /* Initialize APE */
    APE * ape = (APE*)smart_malloc(sizeof(APE));
    ape->automatos = NULL;
    utarray_new(ape->pilha, &Automato_icd);

    {programa}

    {automatos_restantes}

    return ape;
}}

"""

PROGRAMA = """
    {automato_code}

    ape->automatoAtual = {name};
"""

AUTOMATO = """
    /* {name} */
    {automato_init}

    {estados_finais}

    {estados}

    HASH_ADD_KEYPTR(hh, ape->automatos, {name}->title, strlen({name}->title), {name});
"""

AUTOMATO_INIT = """
    Automato *{name} = (Automato*)smart_malloc(sizeof(Automato));
    {name}->estadosTransicoes = NULL;
    {name}->title = "{name}";
    {name}->estado = {inicial};
    utarray_new({name}->estadosFinais, &ut_int_icd);
"""

ESTADO_FINAL = """
    push_tmp = {final}; utarray_push_back({name}->estadosFinais, &push_tmp);
"""

ESTADOS = """
    Estado *{name}{estado} = (Estado*)smart_malloc(sizeof(Estado));
    {name}{estado}->transicoes = NULL;
    {name}{estado}->chamadas = NULL;
    {name}{estado}->estado = {estado};
    HASH_ADD_INT({name}->estadosTransicoes, estado, {name}{estado});

    {transicoes}
    {chamadas}
"""

TRANSICAO = """
    Transicao *{name}{estado}_T{it} = (Transicao*)smart_malloc(sizeof(Transicao));
    {name}{estado}_T{it}->token = "{token}";
    {name}{estado}_T{it}->estadoResultado = {saida};
    HASH_ADD_KEYPTR(hh, {name}{estado}->transicoes, {name}{estado}_T{it}->token, strlen({name}{estado}_T{it}->token), {name}{estado}_T{it});
"""

CHAMADA = """
    TransicaoChamada *{name}{estado}_C{it} = (TransicaoChamada*) smart_malloc(sizeof(TransicaoChamada));
    {name}{estado}_C{it}->token = "{token}";
    {name}{estado}_C{it}->submaquina = "{submaquina}";
    {name}{estado}_C{it}->estadoResultado = {saida};
    HASH_ADD_KEYPTR(hh, {name}{estado}->chamadas, {name}{estado}_C{it}->token, strlen({name}{estado}_C{it}->token), {name}{estado}_C{it});
"""
